<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxlg.logistic.order.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.jxlg.logistic.order.entity.Order">
    <id column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="send_name" jdbcType="VARCHAR" property="sendName" />
    <result column="send_addr" jdbcType="VARCHAR" property="sendAddr" />
    <result column="send_addr_code" jdbcType="VARCHAR" property="sendAddrCode" />
    <result column="send_tel" jdbcType="VARCHAR" property="sendTel" />
    <result column="receive_name" jdbcType="VARCHAR" property="receiveName" />
    <result column="receive_addr" jdbcType="VARCHAR" property="receiveAddr" />
    <result column="receive_addr_code" jdbcType="VARCHAR" property="receiveAddrCode" />
    <result column="receive_tel" jdbcType="VARCHAR" property="receiveTel" />
    <result column="order_status" jdbcType="VARCHAR" property="orderStatus" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, order_no, send_name, send_addr, send_addr_code, send_tel, receive_name, 
    receive_addr, receive_addr_code, receive_tel, order_status, remark
  </sql>
  <select id="selectByExample" parameterType="com.jxlg.logistic.order.entity.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from o_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from o_order
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from o_order
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jxlg.logistic.order.entity.OrderExample">
    delete from o_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jxlg.logistic.order.entity.Order">
    insert into o_order (order_id, order_no, send_name, 
      send_addr, send_addr_code, send_tel, 
      receive_name, receive_addr, receive_addr_code, 
      receive_tel, order_status, remark
      )
    values (#{orderId,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, #{sendName,jdbcType=VARCHAR}, 
      #{sendAddr,jdbcType=VARCHAR}, #{sendAddrCode,jdbcType=VARCHAR}, #{sendTel,jdbcType=VARCHAR}, 
      #{receiveName,jdbcType=VARCHAR}, #{receiveAddr,jdbcType=VARCHAR}, #{receiveAddrCode,jdbcType=VARCHAR}, 
      #{receiveTel,jdbcType=VARCHAR}, #{orderStatus,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jxlg.logistic.order.entity.Order">
    insert into o_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="sendName != null">
        send_name,
      </if>
      <if test="sendAddr != null">
        send_addr,
      </if>
      <if test="sendAddrCode != null">
        send_addr_code,
      </if>
      <if test="sendTel != null">
        send_tel,
      </if>
      <if test="receiveName != null">
        receive_name,
      </if>
      <if test="receiveAddr != null">
        receive_addr,
      </if>
      <if test="receiveAddrCode != null">
        receive_addr_code,
      </if>
      <if test="receiveTel != null">
        receive_tel,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="sendName != null">
        #{sendName,jdbcType=VARCHAR},
      </if>
      <if test="sendAddr != null">
        #{sendAddr,jdbcType=VARCHAR},
      </if>
      <if test="sendAddrCode != null">
        #{sendAddrCode,jdbcType=VARCHAR},
      </if>
      <if test="sendTel != null">
        #{sendTel,jdbcType=VARCHAR},
      </if>
      <if test="receiveName != null">
        #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="receiveAddr != null">
        #{receiveAddr,jdbcType=VARCHAR},
      </if>
      <if test="receiveAddrCode != null">
        #{receiveAddrCode,jdbcType=VARCHAR},
      </if>
      <if test="receiveTel != null">
        #{receiveTel,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jxlg.logistic.order.entity.OrderExample" resultType="java.lang.Long">
    select count(*) from o_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update o_order
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.sendName != null">
        send_name = #{record.sendName,jdbcType=VARCHAR},
      </if>
      <if test="record.sendAddr != null">
        send_addr = #{record.sendAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.sendAddrCode != null">
        send_addr_code = #{record.sendAddrCode,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTel != null">
        send_tel = #{record.sendTel,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveName != null">
        receive_name = #{record.receiveName,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveAddr != null">
        receive_addr = #{record.receiveAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveAddrCode != null">
        receive_addr_code = #{record.receiveAddrCode,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveTel != null">
        receive_tel = #{record.receiveTel,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update o_order
    set order_id = #{record.orderId,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      send_name = #{record.sendName,jdbcType=VARCHAR},
      send_addr = #{record.sendAddr,jdbcType=VARCHAR},
      send_addr_code = #{record.sendAddrCode,jdbcType=VARCHAR},
      send_tel = #{record.sendTel,jdbcType=VARCHAR},
      receive_name = #{record.receiveName,jdbcType=VARCHAR},
      receive_addr = #{record.receiveAddr,jdbcType=VARCHAR},
      receive_addr_code = #{record.receiveAddrCode,jdbcType=VARCHAR},
      receive_tel = #{record.receiveTel,jdbcType=VARCHAR},
      order_status = #{record.orderStatus,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jxlg.logistic.order.entity.Order">
    update o_order
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="sendName != null">
        send_name = #{sendName,jdbcType=VARCHAR},
      </if>
      <if test="sendAddr != null">
        send_addr = #{sendAddr,jdbcType=VARCHAR},
      </if>
      <if test="sendAddrCode != null">
        send_addr_code = #{sendAddrCode,jdbcType=VARCHAR},
      </if>
      <if test="sendTel != null">
        send_tel = #{sendTel,jdbcType=VARCHAR},
      </if>
      <if test="receiveName != null">
        receive_name = #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="receiveAddr != null">
        receive_addr = #{receiveAddr,jdbcType=VARCHAR},
      </if>
      <if test="receiveAddrCode != null">
        receive_addr_code = #{receiveAddrCode,jdbcType=VARCHAR},
      </if>
      <if test="receiveTel != null">
        receive_tel = #{receiveTel,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jxlg.logistic.order.entity.Order">
    update o_order
    set order_no = #{orderNo,jdbcType=VARCHAR},
      send_name = #{sendName,jdbcType=VARCHAR},
      send_addr = #{sendAddr,jdbcType=VARCHAR},
      send_addr_code = #{sendAddrCode,jdbcType=VARCHAR},
      send_tel = #{sendTel,jdbcType=VARCHAR},
      receive_name = #{receiveName,jdbcType=VARCHAR},
      receive_addr = #{receiveAddr,jdbcType=VARCHAR},
      receive_addr_code = #{receiveAddrCode,jdbcType=VARCHAR},
      receive_tel = #{receiveTel,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
</mapper>